<Window x:Class="BLOOMINGTREES_WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BLOOMINGTREES_WpfApp" xmlns:models="clr-namespace:BLOOMINGTREES_WpfApp" d:DataContext="{d:DesignInstance Type=models:BloomingTrees}"
        mc:Ignorable="d" Background="LightBlue"
        Title="MainWindow" Height="1000" Width="1000">
    <Grid x:Name="uxGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="_File">
                <MenuItem Header="_Preview/Edit Images" Click="OnNewPreview_Click"/>
                <MenuItem Header="_Search Internet Flowers" Click="OnNewQuery_Click"/>
                <Separator/>
                <MenuItem Header="E_xit" Click="OnClose_Click"/>
            </MenuItem>
            <MenuItem Header="_Edit"/>
            <MenuItem Header="_Help"/>
        </Menu>

        <!-- Grid Row 0 -->
        <Label Grid.Row="0" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Blooming Trees Database" />


        <!-- Grid Row 1 -->
        <DataGrid Grid.Row="1" AutoGenerateColumns="False" Margin="5"  IsReadOnly="True" Name="FlowersDG">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Item ID" Binding="{Binding ItemId}"/>
                <DataGridTextColumn Header="Product ID" Binding="{Binding ProductId}"/>
                <DataGridTextColumn Header="Item Name" Binding="{Binding ItemName}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding ItemDescription}"/>
                <DataGridTextColumn Header="Image Path" Binding="{Binding ItemImagePath}"/>
                <DataGridTextColumn Header="Quantity" Binding="{Binding ItemQty}"/>
                <DataGridTextColumn Header="Price" Binding="{Binding ItemPrice, StringFormat={}{0:C}}"/>
                <DataGridTextColumn Header="Supplier" Binding="{Binding ItemSupplier}"/>
                <DataGridTextColumn Header="Purchase Date"  Binding="{Binding ItemPurchaseDate, StringFormat=\{0:d\}}"/>

                <DataGridTemplateColumn Header="Update Item">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Edit" Click="UpdateItemFromEdit"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Delete Item">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete" Click="DeleteItem"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>


        <!-- Grid Row 2 -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderBrush="blue" BorderThickness="1" Margin="5">
                <StackPanel Margin="2">

                    <Label Content="Add Items" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <Grid Margin="5" x:Name="uxAddNewItemGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Product ID"/>
                        <TextBox x:Name="uxAddProductId" Grid.Row="0" Grid.Column="1" Text="{Binding ProductId}"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Item Name"/>
                        <TextBox x:Name="uxAddName" Grid.Row="1" Grid.Column="1" Text="{Binding ItemName}"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Description"/>
                        <TextBox x:Name="uxAddDescription" Grid.Row="2" Grid.Column="1" Text="{Binding ItemDescription}"/>
                        <Button x:Name="selectImageButton" Grid.Row="3" Grid.Column="0" Content="Select Image" 
                                FontSize="12" Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Click = "selectImageButton_Click" IsEnabled="True"/>
                        <TextBox x:Name="uxAddImagePath" Grid.Row="3" Grid.Column="1" Text="{Binding ItemImagePath, UpdateSourceTrigger=Explicit}" IsEnabled="False"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Quantity"/>
                        <TextBox x:Name="uxAddQty" Grid.Row="4" Grid.Column="1" Text="{Binding ItemQty}"/>
                        <Label Grid.Row="5" Grid.Column="0" Content="Price"/>
                        <TextBox x:Name="uxAddrice" Grid.Row="5" Grid.Column="1" Text="{Binding ItemPrice, StringFormat={}{0:C}}"/>
                        <Label Grid.Row="6" Grid.Column="0" Content="Supplier"/>
                        <TextBox x:Name="uxAddSupplier" Grid.Row="6" Grid.Column="1" Text="{Binding ItemSupplier}"/>
                        <DatePicker Name="datePickerAdd" Grid.Row="7" Grid.Column="0" IsTodayHighlighted="True" SelectedDateFormat="Long" SelectedDate="{Binding ItemPurchaseDate, NotifyOnSourceUpdated=True, Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                        <TextBlock Grid.Row="7" Grid.Column="1" Text="{Binding ElementName=datePickerAdd, Path=Text}"/>
                        <Button Content="Add Items" Grid.Row="8"  Grid.Column="1" Command="Save" Margin="5" VerticalAlignment="Top" Grid.RowSpan="2">
                            <!--Click="AddFlowers"-->
                            <Button.CommandBindings>
                                <CommandBinding Command="Save"
                                                    Executed="Save_AddFlowers" CanExecute="Save_CanAddFlowers"/>
                            </Button.CommandBindings>
                        </Button>

                    </Grid>
                </StackPanel>
            </Border>

            <Border Grid.Column="1" BorderBrush="blue" BorderThickness="1" Margin="5">
                <StackPanel Margin="5">
                    <Label Content="Update Items" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <Grid Margin="5" x:Name="uxUpdateItemGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Product ID"/>
                        <TextBox x:Name="uxUpdateProductId" Grid.Row="0" Grid.Column="1" Text="{Binding ProductId}"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Item Name"/>
                        <TextBox x:Name="uxUpdateItemName" Grid.Row="1" Grid.Column="1" Text="{Binding ItemName}"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Description"/>
                        <TextBox x:Name="uxUpdateItemDescription" Grid.Row="2" Grid.Column="1" Text="{Binding ItemDescription}"/>
                        <Button x:Name="editImageButton" Grid.Row="3" Grid.Column="0" Content="Edit Image" 
                                FontSize="12" Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                Click = "editImageButton_Click" IsEnabled="True"/>
                        <TextBox x:Name="uxEditImagePath" Grid.Row="3" Grid.Column="1" Text="{Binding ItemImagePath, UpdateSourceTrigger=Explicit}" IsEnabled="False"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Quantity"/>
                        <TextBox x:Name="uxUpdateItemQty" Grid.Row="4" Grid.Column="1" Text="{Binding ItemQty}"/>
                        <Label Grid.Row="5" Grid.Column="0" Content="Price"/>
                        <TextBox x:Name="uxUpdateItemPrice" Grid.Row="5" Grid.Column="1" Text="{Binding ItemPrice, StringFormat={}{0:C}}"/>
                        <Label Grid.Row="6" Grid.Column="0" Content="Supplier"/>
                        <TextBox x:Name="uxUpdateItemSupplier" Grid.Row="6" Grid.Column="1" Text="{Binding ItemSupplier}"/>
                        <DatePicker Name="datePicker" Grid.Row="7" Grid.Column="0" IsTodayHighlighted="True" SelectedDateFormat="Long" SelectedDate="{Binding ItemPurchaseDate, NotifyOnSourceUpdated=True, Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                        <TextBlock x:Name="uxUpdateDatePicker" Grid.Row="7" Grid.Column="1" Text="{Binding ElementName=datePicker, Path=Text, Mode=TwoWay}"/>
                        <Button Content="Update Items" Grid.Row="8"  Grid.Column="1" Command="Save" Margin="5,5,5,0" Height="20" VerticalAlignment="Top" Grid.RowSpan="2">
                            <Button.CommandBindings>
                                <CommandBinding Command="Save"
                                                    Executed="Save_UpdateFlowers" CanExecute="Save_CanUpdateFlowers"/>
                            </Button.CommandBindings>
                        </Button>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>

        <!-- Grid Row 3 -->
        <Grid Grid.Row ="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderBrush="blue" BorderThickness="1" Margin="5">
                <Grid Grid.Column="1">
                    <Image x:Name="displayImage" Margin="10">
                    </Image>
                </Grid>
            </Border>

            <Border Grid.Column="1" BorderBrush="blue" BorderThickness="1" Margin="5">

                <StackPanel Margin="5">
                    <Label Content="Query Items" HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <Grid Margin="5" x:Name="uxQueryItemGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Product ID"/>
                        <TextBox x:Name="uxQueryProductId" Grid.Row="0" Grid.Column="1" IsEnabled="False" Text="{Binding ProductId}"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Item Name"/>
                        <TextBox x:Name="uxQueryItemName" Grid.Row="1" Grid.Column="1" IsEnabled="False" Text="{Binding ItemName}"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Description"/>
                        <TextBox x:Name="uxQueryItemDescription" Grid.Row="2" Grid.Column="1" IsEnabled="False" Text="{Binding ItemDescription}"/>
                        <Label Grid.Row="3" Grid.Column="0" Content="Quantity"/>
                        <TextBox x:Name="uxQueryItemQty" Grid.Row="3" Grid.Column="1" IsEnabled="False" Text="{Binding ItemQty}"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Supplier"/>
                        <TextBox x:Name="uxQueryItemSupplier" Grid.Row="4" Grid.Column="1" IsEnabled="False" Text="{Binding ItemSupplier}"/>
                        <DatePicker Name="queryDatePicker" Grid.Row="5" Grid.Column="0" IsEnabled="False" IsTodayHighlighted="True" SelectedDateFormat="Long" SelectedDate="{Binding ItemPurchaseDate, NotifyOnSourceUpdated=True, Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                        <TextBlock x:Name="uxQueryPurchaseDate" Grid.Row="5" Grid.Column="1" Text="{Binding ElementName=queryDatePicker, Path=Text, Mode=TwoWay}"/>
                        <Label Grid.Row="6" Grid.Column="1" HorizontalAlignment="Center" Content="Use Dropdown to Query Selected Field"/>
                        <TextBlock x:Name="uxQueryMessage" Grid.Row="6" Grid.Column="0"/>
                        <ComboBox Name="CBSelectQueryField" Grid.Row="7" Grid.Column="1" SelectedIndex="-1"  IsSynchronizedWithCurrentItem="True" SelectionChanged="ComboBox_SelectionChanged" DropDownClosed="ComboBox_DropDownClosed">
                            <ComboBoxItem Content = "ProductID" />
                            <ComboBoxItem Content = "ItemName" />
                            <ComboBoxItem Content = "Description" />
                            <ComboBoxItem Content = "Quantity"/>
                            <ComboBoxItem Content = "Supplier" />
                            <ComboBoxItem Content = "Purchase Date" />
                        </ComboBox>
                        <Button Grid.Row="8" Grid.Column="0" Content="Clear" Margin="5" Click="ClearFilter"/>
                        <Button Grid.Row="8" Grid.Column="1" Content="Run Query" Margin="5" Click="QueryItems"/>
                        
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>

        <!-- Grid Row 4 -->
        <Grid x:Name="Select_Field_to_Query" Grid.Row ="4">
            <StatusBar DockPanel.Dock="Bottom">
                <TextBlock x:Name="uxRecordCount">
                </TextBlock>
            </StatusBar>
        </Grid>
    </Grid>
</Window>
